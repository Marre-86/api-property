openapi: 3.0.0
info:
  title: Villa Verify API
  description: Artem Pokhiliuk's training progect 
  version: 1.0.0
servers:
  - url: https://villa-verify-production.up.railway.app/api/v1
    description: Main (production) server
  - url: localhost:8000/api/v1
    description: Internal staging server for testing
paths:
  /houses:
    get:
      summary: Returns a list of houses.
      description:  Returns a list of all houses in the database.
      responses:
        '200':    # status code
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/House'
      parameters:
        - name: filter[name]
          in: query
          description: Selection of the houses those names have been specified by a user
          required: false
          schema:
            type: string
        - name: filter[price-gte]
          in: query
          description: Selection of the houses those names have been specified by a user
          required: false
          schema:
            type: integer
        - name: filter[price-lte]
          in: query
          description: Selection of the houses those names have been specified by a user
          required: false
          schema:
            type: integer
        - name: filter[bedrooms]
          in: query
          description: Selection of the houses those names have been specified by a user
          required: false
          schema:
            type: integer
        - name: filter[bathrooms]
          in: query
          description: Selection of the houses those names have been specified by a user
          required: false
          schema:
            type: integer
        - name: filter[storeys]
          in: query
          description: Selection of the houses those names have been specified by a user
          required: false
          schema:
            type: integer
        - name: filter[garages]
          in: query
          description: Selection of the houses those names have been specified by a user
          required: false
          schema:
            type: integer
    post:
      summary: Adds a new house.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/House'
      responses: 
        '201':
          description: New house has been added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/House'
        '400':
          description: Bad request. House has not been added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /houses/{houseId}:
    parameters:
      - name: houseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    get:
      summary: Returns a house by ID.
      responses: 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/House'
    put:
      summary: Updates chosen house.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses: 
        '200':
          description: House has been updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/House'
        '404':
          description: Bad request. House has not been upddated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
    delete:
      summary: Deletes chosen house.
      responses: 
        '204':
          description: House has been deleted
        '404':
          description: Bad request. House has not been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'

components:
  schemas:
    House:
      type: object
      properties:
        id:
          type: integer
          example: 10
        name:
          type: string
          example: The Fresco
        price: 
          type: integer
          example: 999993
        bedrooms: 
          type: integer
          example: 2
        bathrooms: 
          type: integer
          example: 2
        storeys: 
          type: integer
          example: 2
        garages: 
          type: integer
          example: 2
      required:
        - name
        - price
        - bedrooms
        - bathrooms
        - storeys
        - garages
    BadRequest:
      type: object
      properties:
        message:
          type: string